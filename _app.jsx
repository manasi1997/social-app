// _app.jsx

import React from 'react';
import Head from 'next/head';
import { Provider } from 'react-redux';
import { wrapper } from '../store';
import Layout from '../components/Layout';
import { ApolloProvider } from '@apollo/client';
import client from '../lib/apolloClient';
import { SWRConfig } from 'swr';
import { apiFetcher } from '../utils/apiFetcher';
import { AppProps } from 'next/app';
import { io } from 'socket.io-client';
import { useStore } from '../store';

import { apiFetcher } from '../utils/apiFetcher';

// Use apiFetcher wherever you need to fetch data from your API
const fetchData = async () => {
  try {
    const data = await apiFetcher('https://api.example.com/data');
    console.log(data);
  } catch (error) {
    console.error('Error fetching data:', error);
  }
};


const MyApp: React.FC<AppProps> = ({ Component, pageProps }) => {
  const store = useStore(pageProps.initialReduxState);
  const socket: SocketIOClient.Socket = io(`${process.env.NEXT_PUBLIC_API_BASE_URL}/ws`);
  // Provide a value for the constants
  return (
    <ApolloProvider client={client}>
      <SWRConfig value={{ fetcher: apiFetcher }}>
        <Provider store={store}>
          <Head>
            <title>My Application</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <Layout>
            <Component {...pageProps} socket={socket} />
          </Layout>
        </Provider>
      </SWRConfig>
    </ApolloProvider>
  );

};
export default wrapper.withRedux(MyApp);
